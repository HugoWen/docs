# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-09 21:17+0000\n"
"Last-Translator: 张传美 <zcmsniper@sina.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# e921141b23594ed5974117ee2875aecf
#: ../source/core/import-export.txt:3
msgid "Import and Export MongoDB Data"
msgstr "导入导出MongoDB数据"

# 98e2cc06819e4517bc0a50ff51453de7
#: ../source/core/import-export.txt:10
msgid ""
"This document provides an overview of the import and export programs "
"included in the MongoDB distribution. These tools are useful when you want "
"to backup or export a portion of your data without capturing the state of "
"the entire database, or for simple data ingestion cases. For more complex "
"data migration tasks, you may want to write your own import and export "
"scripts using a client :term:`driver` to interact with the database itself. "
"For disaster recovery protection and routine database backup operation, use "
"full :doc:`database instance backups </core/backups>`."
msgstr ""
"本文概述了MongoDB发行版的导入导出程序 "
"这些工具在你想要备份或者导出一部分你的数据而不需要获取整个数据库状态或者简单的数据获取情况下很有用。"
"对于更复杂的数据迁移任务，你或许想用一个客户端 :term:`driver` 和数据库交互来写你的导入导出脚本。 "
"对于灾难恢复保护和日常数据备份，利用完整的文档  :doc:`database instance backups </core/backups>`."

# 450588a55bb743fab335b0008e43f296
#: ../source/core/import-export.txt:22
msgid ""
"Because these tools primarily operate by interacting with a running "
":program:`mongod` instance, they can impact the performance of your running "
"database."
msgstr ""
"因为这些工具主要通过和运行着的 :program:`mongod` 实例交互操作，因此它们会影响运行着的数据库的性能。"

# f41c2484129e47e183638116ce5a653f
#: ../source/core/import-export.txt:26
msgid ""
"Not only do these processes create traffic for a running database instance, "
"they also force the database to read all data through memory. When MongoDB "
"reads infrequently used data, it can supplant more frequently accessed data,"
" causing a deterioration in performance for the database's regular workload."
msgstr ""
"这些过程对运行着的数据库实例不仅产生流量，而且也强制数据库通读所有内存数据。"
"MongoDB不频繁的读取应用数据能够避免频繁访问数据而导致在数据库常规工作负载方面的性能恶化"

# 2c5b605efa254287a261b8387f03ffe0
#: ../source/core/import-export.txt:32
msgid ""
":doc:`/core/backups` or :mms:`MMS Backup Manual </backup>` for more "
"information on backing up MongoDB instances. Additionally, consider the "
"following references for the MongoDB import/export tools:"
msgstr ""
":doc:`/core/backups` 或者 :mms:`MMS Backup Manual </backup>` "
"介绍了更多在MongoDB实例备份方面的信息。"
"此外,考虑以下参考MongoDB导入/导出工具:"

# 111ff3e75ecf4c0c918dda52f11c0bd2
#: ../source/core/import-export.txt:37
msgid ":doc:`/reference/program/mongoimport`"
msgstr ":doc:`/reference/program/mongoimport`"

# 8a0b639656f64205aeae987efeba1525
#: ../source/core/import-export.txt:38
msgid ":doc:`/reference/program/mongoexport`"
msgstr ":doc:`/reference/program/mongoexport`"

# 8e94fabf8f8649d8921fd8fd937fd2a9
#: ../source/core/import-export.txt:39
msgid ":doc:`/reference/program/mongorestore`"
msgstr ":doc:`/reference/program/mongorestore`"

# 01f35c6a48974d69935b0f310be4d8b1
#: ../source/core/import-export.txt:40
msgid ":doc:`/reference/program/mongodump`"
msgstr ":doc:`/reference/program/mongodump`"

# 6ec7bc6a58c8417cb0e55d0088b8b135
#: ../source/core/import-export.txt:43
msgid "Data Import, Export, and Backup Operations"
msgstr "数据导入，导出，和备份操作"

# 290059fbb6994468a82641631307b7fb
#: ../source/core/import-export.txt:45
msgid ""
"For resilient and non-disruptive backups, use a file system or block-level "
"disk snapshot function, such as the methods described in the "
":doc:`/core/backups` document. The tools and operations discussed provide "
"functionality that is useful in the context of providing some kinds of "
"backups."
msgstr ""
"对于弹性和非破坏性的备份，使用文件系统或块级磁盘快照功能, "
"例如在文档  :doc:`/core/backups` 中描述的方法。 "
"这里讨论的工具和操作所提供的功能在某些类型的备份情况下有用。"

# a2fbf4b3bd5149ad88342708deff3f6d
#: ../source/core/import-export.txt:51
msgid ""
"In contrast, use import and export tools to backup a small subset of your "
"data or to move data to or from a third party system. These backups may "
"capture a small crucial set of data or a frequently modified section of data"
" for extra insurance, or for ease of access."
msgstr ""
"与此相反，为了保险起见，或者为了访问方便起见,用导入和导出工具来备份一个你的小数据集"
"或移动数据到第三系统或从第三方系统移动数据进来。这些备份可以处理一个小但重要的数据集"
"或者频繁更新的数据部分。"

# f4f477fba2d0438a83247bf4179b6c12
# 7d1ca844e98d4394a85b79ed8396be8b
# d1eec484dbf54c6e81d193fea4232996
#: ../source/includes/warning-type-fidelity-loss.rst:3
#: ../source/includes/warning-type-fidelity-loss.rst:3
#: ../source/includes/warning-type-fidelity-loss.rst:3
msgid ""
":program:`mongoimport` and :program:`mongoexport` do not reliably preserve "
"all rich :term:`BSON` data types because :term:`JSON` can only represent a "
"subset of the types supported by BSON. As a result, data exported or "
"imported with these tools may lose some measure of fidelity. See "
":doc:`/reference/mongodb-extended-json` for more information."
msgstr ""
":program:`mongoimport` 和 :program:`mongoexport` 并不能可靠地保存所有的富文本"
" :term:`BSON` 数据类型，因为  :term:`JSON` 仅能代表一种BSON支持的子集类型。"
"因此，数据用这些工具导出导入或许会丢失一些精确程度。更多信息参考文档"
" :doc:`/reference/mongodb-extended-json` "

# f43a373410a34b0fb6f840c9f674b79f
#: ../source/core/import-export.txt:58
msgid ""
"No matter how you decide to import or export your data, consider the "
"following guidelines:"
msgstr ""
"不管你决定怎样导入导出数据，请考虑一下指导方针："

# f39b388d2840428ab8f8f3547b0408d6
#: ../source/core/import-export.txt:61
msgid ""
"Label files so that you can identify the contents of the export or backup as"
" well as the point in time the export/backup reflect."
msgstr ""
"标记文件，这样你能够区分导出或者备份的内容及导出或备份的时间点。"

# 1bf4a8546d9545ce9338d6140aef465f
#: ../source/core/import-export.txt:64
msgid ""
"Do not create or apply exports if the backup process itself will have an "
"adverse effect on a production system."
msgstr ""
"如果备份过程会对生产线上系统有负面影响的话，不要创建或应用导出。"

# 8626873887844e2a99bca792e02b5704
#: ../source/core/import-export.txt:67
msgid ""
"Make sure that they reflect a consistent data state. Export or backup "
"processes can impact data integrity (i.e. type fidelity) and consistency if "
"updates continue during the backup process."
msgstr ""
"确保它们反应数据的一致性状态。如果备份过程中不断更新的话,导出或备份过程可能影响数据的完整性与一致性。"

# b1fc7fec142441a89cce0dbcfadf1fd5
#: ../source/core/import-export.txt:71
msgid ""
"Test backups and exports by restoring and importing to ensure that the "
"backups are useful."
msgstr ""
"通过恢复（restoring)和导入(importing)测试备份与导出来确保备份有用。"

# 043eb65c40bd4b71a8c53de2c6d9fb4b
#: ../source/core/import-export.txt:75
msgid "Human Intelligible Import/Export Formats"
msgstr "人可理解的导入/导出格式"

# 4a05093d446741378f0b62b5017c0961
#: ../source/core/import-export.txt:77
msgid ""
"This section describes a process to import/export a collection to a file in "
"a :term:`JSON` or :term:`CSV` format."
msgstr ""
"本章描述了用 :term:`JSON` 或 :term:`CSV` 格式导入导出集合到文件的过程。"

# 5a8ee8c7767248cf878817bd8d9ad410
#: ../source/core/import-export.txt:80
msgid ""
"The examples in this section use the MongoDB tools "
":doc:`/reference/program/mongoimport` and "
":doc:`/reference/program/mongoexport`. These tools may also be useful for "
"importing data into a MongoDB database from third party applications."
msgstr ""
"本章中的示例实用MongoDB tools :doc:`/reference/program/mongoimport` 和 "
":doc:`/reference/program/mongoexport` 。这些工具或许对从第三方应用程序 "
"导入数据到MongoDB数据库有用。"

# a097c2d003f444f0a3a106eb75991878
#: ../source/core/import-export.txt:86
msgid ""
"If you want to simply copy a database or collection from one instance to "
"another, consider using the :dbcommand:`copydb`, :dbcommand:`clone`, or "
":dbcommand:`cloneCollection` commands, which may be more suited to this "
"task. The :program:`mongo` shell provides the :method:`db.copyDatabase()` "
"method."
msgstr ""
"假如你想简单的从一个实例拷贝数据库到另一个实例的话，考虑用 :dbcommand:`copydb` , "
" :dbcommand:`clone`, 或者 :dbcommand:`cloneCollection` 命令。 这些命令或许更适合 "
"上面的任务。 :program:`mongo` shell 提供 :method:`db.copyDatabase()` 方法。"

# 9419c27ef0a54274b489a91062cfbea4
#: ../source/core/import-export.txt:93
msgid "Collection Export with :program:`mongoexport`"
msgstr "用 :program:`mongoexport` 导出集合"

# cd810405f421437982996ddb8629fabd
#: ../source/core/import-export.txt:97
msgid ""
"With the :program:`mongoexport` utility you can create a backup file. In the"
" most simple invocation, the command takes the following form:"
msgstr ""
"通过用 :program:`mongoexport` 你能创建备份文件。在最简单的掉用中该命令采用以下形式："

# 82ff12ff42624eb382f71e54ea8a9706
#: ../source/core/import-export.txt:105
msgid ""
"This will export all documents in the collection named ``collection`` into "
"the file ``collection.json``. Without the output specification (i.e. "
"\":option:`--out collection.json <mongoexport --out>`\"), "
":program:`mongoexport` writes output to standard output (i.e. \"stdout\"). "
"You can further narrow the results by supplying a query filter using the "
"\":option:`--query <mongoexport --query>`\" and limit results to a single "
"database using the \":option:`--db <mongoexport --db>`\" option. For "
"instance:"
msgstr ""
"这将导出在数据集 ``collection`` 中的所有文档到文件 ``collection.json``. "
"如果没有输出参数 (i.e. \":option:`--out collection.json <mongoexport --out>`\"), "
" :program:`mongoexport` 将写出处到标准输出 (i.e. \"stdout\"). "
"你可以进一步限制结果通过用 \":option:`--query <mongoexport --query>`\" 提供查询过滤 "
"和用 \":option:`--db <mongoexport --db>`\" 限制结果到一个单独的数据库。例如："

# 31c2682b33d44f4c926f793d7c819494
#: ../source/core/import-export.txt:118
msgid ""
"This command returns all documents in the ``sales`` database's ``contacts`` "
"collection, with a field named ``field`` with a value of ``1``. Enclose the "
"query in single quotes (e.g. ``'``) to ensure that it does not interact with"
" your shell environment. The resulting documents will return on standard "
"output."
msgstr ""
"这个命令返回在``sales`` 数据库的 ``contacts``  集合中的所有文档，"
"和一个字段名为``field`` 值为 ``1``.  两边用单引号查询确保它不予shell环境相互影响。"
"结果文档将被返回在标准输出中。"

# 7db628f4d17e4f3a9125c23653cab5fe
#: ../source/core/import-export.txt:124
msgid ""
"By default, :program:`mongoexport` returns one :term:`JSON document` per "
"MongoDB document. Specify the \":option:`--jsonArray <mongoexport "
"--jsonArray>`\" argument to return the export as a single :term:`JSON` "
"array. Use the \":option:`--csv <mongoexport --csv>`\" file to return the "
"result in CSV (comma separated values) format."
msgstr ""
"默认情况下，:program:`mongoexport` 每个MongoDB 文档返回一个 :term:`JSON document` 。"
"指定\":option:`--jsonArray <mongoexport --jsonArray>`\" 参数作为一个单独 :term:`JSON` "
"数组返回。用 \":option:`--csv <mongoexport --csv>`\" 文件 来返回"
"CSV (comma separated values)格式的结果"

# 472c72c7a84045fca64ff2ff8ce974c4
#: ../source/core/import-export.txt:131
msgid ""
"If your :program:`mongod` instance is not running, you can use the "
"\":option:`--dbpath <mongoexport --dbpath>`\" option to specify the location"
" to your MongoDB instance's database files. See the following example:"
msgstr ""
"假如你的 :program:`mongod` 实例没有运行，你可以用\":option:`--dbpath <mongoexport --dbpath>`\" "
"选项来指定你的MongoDB实例的数据库文件的位置。参照下面的例子："

# d7b3ffaf0ccf427293a49d9a29db55f6
#: ../source/core/import-export.txt:140
msgid ""
"This reads the data files directly. This locks the data directory to prevent"
" conflicting writes. The :program:`mongod` process must *not* be running or "
"attached to these data files when you run :program:`mongoexport` in this "
"configuration."
msgstr ""
"这中方式直接读数据文件，锁定数据目录来避免冲突写。当你用这种配置来运行 "
":program:`mongoexport` 时 :program:`mongod` 进程必须是没有运行的 "
"并且没有连着这些数据文件"

# 5ba0835185a6470285c56f63c1ae621b
#: ../source/core/import-export.txt:145
msgid ""
"The \":option:`--host <mongoexport --host>`\" and \":option:`--port "
"<mongoexport --port>`\" options allow you to specify a non-local host to "
"connect to capture the export. Consider the following example:"
msgstr ""
"\":option:`--host <mongoexport --host>`\" 和 \":option:`--port <mongoexport --port>`\""
"选项允许你指定非本地的主机来连接捕获输出，考虑下面的例子："

# 34fe3f078f074055b17aa37cec4d84ec
#: ../source/core/import-export.txt:153
msgid ""
"On any :program:`mongoexport` command you may, as above specify username and"
" password credentials as above."
msgstr ""
"你可以在任何 :program:`mongoexport` 中向上边例子那样指定用户名密码凭据"

# 66d0f34e75f942038638cba3299e1566
#: ../source/core/import-export.txt:157
msgid "Collection Import with :program:`mongoimport`"
msgstr "用 :program:`mongoimport` 导入集合"

# c699093be7174b6da7bdb7041553fe50
#: ../source/core/import-export.txt:161
msgid ""
"To restore a backup taken with :program:`mongoexport`. Most of the arguments"
" to :program:`mongoexport` also exist for :program:`mongoimport`. Consider "
"the following command:"
msgstr ""
"采取 :program:`mongoexport` 的方式回复备份，大部分在 :program:`mongoexport` "
"中的参数在 :program:`mongoimport` 中也存在。考虑下面的命令："

# 79dd960d18bc433fa012aef8b7eed4dd
#: ../source/core/import-export.txt:169
msgid ""
"This imports the contents of the file ``collection.json`` into the "
"collection named ``collection``. If you do not specify a file with the "
"\":option:`--file <mongoimport --file>`\" option, :program:`mongoimport` "
"accepts input over standard input (e.g. \"stdin.\")"
msgstr ""
"导入文件``collection.json``的内容到名为``collection``的集合中。"
"如果你不用\":option:`--file <mongoimport --file>`\"选项指定文件, "
":program:`mongoimport`将从标准输入 (e.g. \"stdin.\")接受输入内容。"

# aed103e958d54ac7aea343a5a81393e8
#: ../source/core/import-export.txt:175
msgid ""
"If you specify the \":option:`--upsert <mongoimport --upsert>`\" option, all"
" of :program:`mongoimport` operations will attempt to update existing "
"documents in the database and insert other documents. This option will cause"
" some performance impact depending on your configuration."
msgstr ""
"如果你指定\":option:`--upsert <mongoimport --upsert>`\"选项，所有的"
":program:`mongoimport` 操作将尝试去更新在数据库中已经存在的文档和插入其他文档。"
"这个选项将根据你的配置导致一些性能影响"

# c4548b4561234b69a51a4c2ba11758c2
#: ../source/core/import-export.txt:181
msgid ""
"You can specify the database option :option:`--db <mongoimport --db>` to "
"import these documents to a particular database. If your MongoDB instance is"
" not running, use the \":option:`--dbpath <mongoimport --dbpath>`\" option "
"to specify the location of your MongoDB instance's database files. Consider "
"using the \":option:`--journal <mongoimport --journal>`\" option to ensure "
"that :program:`mongoimport` records its operations in the journal. The "
"``mongod`` process must *not* be running or attached to these data files "
"when you run :program:`mongoimport` in this configuration."
msgstr ""
"你能指定数据库选项 :option:`--db <mongoimport --db>` 来导入这些文档到特定"
"的数据库。如果你的MongoDB实例没用运行，用\":option:`--dbpath <mongoimport --dbpath>`\""
"选项指定你的MongoDB实例的数据库文件的地址。当你在这个配置中运行"
" :program:`mongoimport`时，考虑用\":option:`--journal <mongoimport --journal>`\""
"选项来确保:program:`mongoimport`记录它的操作在journal中。``mongod``进程"
"必须没有运行并且没有连接这些数据文件。"

# 22cff2d386c242ba9002f052d401bdce
#: ../source/core/import-export.txt:191
msgid ""
"Use the \":option:`--ignoreBlanks <mongoimport --ignoreBlanks>`\" option to "
"ignore blank fields. For :term:`CSV` and :term:`TSV` imports, this option "
"provides the desired functionality in most cases: it avoids inserting blank "
"fields in MongoDB documents."
msgstr ""
"用\":option:`--ignoreBlanks <mongoimport --ignoreBlanks>`\"选项忽略空白字段。"
"对:term:`CSV` 和 :term:`TSV` 导入，这个选项提在大部分示例中供需要的功能："
"它避免插入空白字段到MongoDB文档中。"
